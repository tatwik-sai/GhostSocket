{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/ghost_socket/frontend/src/components/RotatingText.jsx"],"sourcesContent":["\"use client\";\r\n\r\nimport {\r\n  forwardRef,\r\n  useCallback,\r\n  useEffect,\r\n  useImperativeHandle,\r\n  useMemo,\r\n  useState,\r\n} from \"react\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\n\r\nfunction cn(...classes) {\r\n  return classes.filter(Boolean).join(\" \");\r\n}\r\n\r\nconst RotatingText = forwardRef((props, ref) => {\r\n  const {\r\n    texts,\r\n    transition = { type: \"spring\", damping: 25, stiffness: 300 },\r\n    initial = { y: \"100%\", opacity: 0 },\r\n    animate = { y: 0, opacity: 1 },\r\n    exit = { y: \"-120%\", opacity: 0 },\r\n    animatePresenceMode = \"wait\",\r\n    animatePresenceInitial = false,\r\n    rotationInterval = 2000,\r\n    staggerDuration = 0,\r\n    staggerFrom = \"first\",\r\n    loop = true,\r\n    auto = true,\r\n    splitBy = \"characters\",\r\n    onNext,\r\n    mainClassName,\r\n    splitLevelClassName,\r\n    elementLevelClassName,\r\n    ...rest\r\n  } = props;\r\n\r\n  const [currentTextIndex, setCurrentTextIndex] = useState(0);\r\n\r\n  const splitIntoCharacters = (text) => {\r\n    if (typeof Intl !== \"undefined\" && Intl.Segmenter) {\r\n      const segmenter = new Intl.Segmenter(\"en\", { granularity: \"grapheme\" });\r\n      return Array.from(segmenter.segment(text), (segment) => segment.segment);\r\n    }\r\n    return Array.from(text);\r\n  };\r\n\r\n  const elements = useMemo(() => {\r\n    const currentText = texts[currentTextIndex];\r\n    if (splitBy === \"characters\") {\r\n      const words = currentText.split(\" \");\r\n      return words.map((word, i) => ({\r\n        characters: splitIntoCharacters(word),\r\n        needsSpace: i !== words.length - 1,\r\n      }));\r\n    }\r\n    if (splitBy === \"words\") {\r\n      return currentText.split(\" \").map((word, i, arr) => ({\r\n        characters: [word],\r\n        needsSpace: i !== arr.length - 1,\r\n      }));\r\n    }\r\n    if (splitBy === \"lines\") {\r\n      return currentText.split(\"\\n\").map((line, i, arr) => ({\r\n        characters: [line],\r\n        needsSpace: i !== arr.length - 1,\r\n      }));\r\n    }\r\n\r\n    return currentText.split(splitBy).map((part, i, arr) => ({\r\n      characters: [part],\r\n      needsSpace: i !== arr.length - 1,\r\n    }));\r\n  }, [texts, currentTextIndex, splitBy]);\r\n\r\n  const getStaggerDelay = useCallback(\r\n    (index, totalChars) => {\r\n      const total = totalChars;\r\n      if (staggerFrom === \"first\") return index * staggerDuration;\r\n      if (staggerFrom === \"last\") return (total - 1 - index) * staggerDuration;\r\n      if (staggerFrom === \"center\") {\r\n        const center = Math.floor(total / 2);\r\n        return Math.abs(center - index) * staggerDuration;\r\n      }\r\n      if (staggerFrom === \"random\") {\r\n        const randomIndex = Math.floor(Math.random() * total);\r\n        return Math.abs(randomIndex - index) * staggerDuration;\r\n      }\r\n      return Math.abs(staggerFrom - index) * staggerDuration;\r\n    },\r\n    [staggerFrom, staggerDuration]\r\n  );\r\n\r\n  const handleIndexChange = useCallback(\r\n    (newIndex) => {\r\n      setCurrentTextIndex(newIndex);\r\n      if (onNext) onNext(newIndex);\r\n    },\r\n    [onNext]\r\n  );\r\n\r\n  const next = useCallback(() => {\r\n    const nextIndex =\r\n      currentTextIndex === texts.length - 1\r\n        ? loop\r\n          ? 0\r\n          : currentTextIndex\r\n        : currentTextIndex + 1;\r\n    if (nextIndex !== currentTextIndex) {\r\n      handleIndexChange(nextIndex);\r\n    }\r\n  }, [currentTextIndex, texts.length, loop, handleIndexChange]);\r\n\r\n  const previous = useCallback(() => {\r\n    const prevIndex =\r\n      currentTextIndex === 0\r\n        ? loop\r\n          ? texts.length - 1\r\n          : currentTextIndex\r\n        : currentTextIndex - 1;\r\n    if (prevIndex !== currentTextIndex) {\r\n      handleIndexChange(prevIndex);\r\n    }\r\n  }, [currentTextIndex, texts.length, loop, handleIndexChange]);\r\n\r\n  const jumpTo = useCallback(\r\n    (index) => {\r\n      const validIndex = Math.max(0, Math.min(index, texts.length - 1));\r\n      if (validIndex !== currentTextIndex) {\r\n        handleIndexChange(validIndex);\r\n      }\r\n    },\r\n    [texts.length, currentTextIndex, handleIndexChange]\r\n  );\r\n\r\n  const reset = useCallback(() => {\r\n    if (currentTextIndex !== 0) {\r\n      handleIndexChange(0);\r\n    }\r\n  }, [currentTextIndex, handleIndexChange]);\r\n\r\n  useImperativeHandle(\r\n    ref,\r\n    () => ({\r\n      next,\r\n      previous,\r\n      jumpTo,\r\n      reset,\r\n    }),\r\n    [next, previous, jumpTo, reset]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!auto) return;\r\n    const intervalId = setInterval(next, rotationInterval);\r\n    return () => clearInterval(intervalId);\r\n  }, [next, rotationInterval, auto]);\r\n\r\n  return (\r\n    <motion.span\r\n      className={cn(\r\n        \"flex flex-wrap whitespace-pre-wrap relative\",\r\n        mainClassName\r\n      )}\r\n      {...rest}\r\n      layout\r\n      transition={transition}\r\n    >\r\n      <span className=\"sr-only\">{texts[currentTextIndex]}</span>\r\n      <AnimatePresence mode={animatePresenceMode} initial={animatePresenceInitial}>\r\n        <motion.div\r\n          key={currentTextIndex}\r\n          className={cn(\r\n            splitBy === \"lines\"\r\n              ? \"flex flex-col w-full\"\r\n              : \"flex flex-wrap whitespace-pre-wrap relative\"\r\n          )}\r\n          layout\r\n          aria-hidden=\"true\"\r\n        >\r\n          {elements.map((wordObj, wordIndex, array) => {\r\n            const previousCharsCount = array\r\n              .slice(0, wordIndex)\r\n              .reduce((sum, word) => sum + word.characters.length, 0);\r\n            return (\r\n              <span key={wordIndex} className={cn(\"inline-flex\", splitLevelClassName)}>\r\n                {wordObj.characters.map((char, charIndex) => (\r\n                  <motion.span\r\n                    key={charIndex}\r\n                    initial={initial}\r\n                    animate={animate}\r\n                    exit={exit}\r\n                    transition={{\r\n                      ...transition,\r\n                      delay: getStaggerDelay(\r\n                        previousCharsCount + charIndex,\r\n                        array.reduce((sum, word) => sum + word.characters.length, 0)\r\n                      ),\r\n                    }}\r\n                    className={cn(\"inline-block\", elementLevelClassName)}\r\n                  >\r\n                    {char}\r\n                  </motion.span>\r\n                ))}\r\n                {wordObj.needsSpace && <span className=\"whitespace-pre\"> </span>}\r\n              </span>\r\n            );\r\n          })}\r\n        </motion.div>\r\n      </AnimatePresence>\r\n    </motion.span>\r\n  );\r\n});\r\n\r\nRotatingText.displayName = \"RotatingText\";\r\nexport default RotatingText;\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 283, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/ghost_socket/frontend/src/lib/utils.js"],"sourcesContent":["import { clsx } from \"clsx\";\r\nimport { twMerge } from \"tailwind-merge\"\r\n\r\nexport function cn(...inputs) {\r\n  return twMerge(clsx(inputs));\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAM;IAC1B,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 302, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/ghost_socket/frontend/src/components/ui/button.jsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport { cva } from \"class-variance-authority\";\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\r\n        destructive:\r\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\r\n        outline:\r\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\r\n        secondary:\r\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\r\n        ghost:\r\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\r\n        link: \"text-primary underline-offset-4 hover:underline\",\r\n      },\r\n      size: {\r\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\r\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\r\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\r\n        icon: \"size-9\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nfunction Button({\r\n  className,\r\n  variant,\r\n  size,\r\n  asChild = false,\r\n  ...props\r\n}) {\r\n  const Comp = asChild ? Slot : \"button\"\r\n\r\n  return (\r\n    <Comp\r\n      data-slot=\"button\"\r\n      className={cn(buttonVariants({ variant, size, className }))}\r\n      {...props} />\r\n  );\r\n}\r\n\r\nexport { Button, buttonVariants }\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OACJ;IACC,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAEf;KAfS","debugId":null}},
    {"offset": {"line": 367, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/ghost_socket/frontend/src/components/DownloadAppButton.jsx"],"sourcesContent":["'use client';\r\n\r\nimport { FaWindows } from \"react-icons/fa\";\r\nimport { Button } from \"./ui/button\";\r\n\r\nexport default function DownloadButton() {\r\n  const handleDownload = () => {\r\n    const link = document.createElement('a');\r\n    link.href = '/root_page/ghost-setup.exe';\r\n    link.download = 'ghost-setup.exe';\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  };\r\n\r\n  return (\r\n    <Button className=\"red-primary-button text-xl w-2/5\" onClick={handleDownload}>\r\n        <FaWindows className=\"w-[15px] h-[15px]\" />\r\n        Download\r\n    </Button>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAKe,SAAS;IACtB,MAAM,iBAAiB;QACrB,MAAM,OAAO,SAAS,aAAa,CAAC;QACpC,KAAK,IAAI,GAAG;QACZ,KAAK,QAAQ,GAAG;QAChB,SAAS,IAAI,CAAC,WAAW,CAAC;QAC1B,KAAK,KAAK;QACV,SAAS,IAAI,CAAC,WAAW,CAAC;IAC5B;IAEA,qBACE,6LAAC,qIAAA,CAAA,SAAM;QAAC,WAAU;QAAmC,SAAS;;0BAC1D,6LAAC,iJAAA,CAAA,YAAS;gBAAC,WAAU;;;;;;YAAsB;;;;;;;AAInD;KAhBwB","debugId":null}}]
}