{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/ghost_socket/frontend/src/utils/constants.js"],"sourcesContent":["export const HOST = process.env.NEXT_SERVER_URL;\r\n"],"names":[],"mappings":";;;AAAO,MAAM,OAAO,QAAQ,GAAG,CAAC,eAAe","debugId":null}},
    {"offset": {"line": 137, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/ghost_socket/frontend/src/context/SocketContext.jsx"],"sourcesContent":["\r\nimport { useAppStore } from \"@/store\";\r\nimport { HOST } from \"@/utils/constants\";\r\nimport { createContext,useContext, useEffect, useRef } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\n\r\nconst SocketContext = createContext(null);\r\n\r\nexport const useSocket = () => {\r\n    return useContext(SocketContext);\r\n}\r\n\r\nexport const SocketProvider = ({children}) => {\r\n    const socket = useRef();\r\n    const {userInfo} = useAppStore()\r\n\r\n    useEffect(() => {\r\n        if (userInfo){\r\n            socket.current = io(HOST, {\r\n                withCredentials: true,\r\n                query: {userId: userInfo.id}\r\n            })\r\n            socket.current.on(\"connect\", () => {\r\n                console.log(\"connected to socket server\");\r\n            })\r\n\r\n            const handleReceiveMessage = (message) => {\r\n                const {selectedChatType, selectedChatData, addMessage, addContactsInDMContacts} = useAppStore.getState()\r\n                if (selectedChatType !== undefined && (selectedChatData._id === message.sender._id || selectedChatData._id === message.recipient._id)){\r\n                    addMessage(message);\r\n                }\r\n                addContactsInDMContacts(message);\r\n            }\r\n\r\n            const handleRecieveChannelMessage = (message) => {\r\n                console.log(\"hello12\")\r\n                const { selectedChatData, selectedChatType, addMessage, addChannelInChannelList } = useAppStore.getState();\r\n              \r\n                if (\r\n                  selectedChatType !== undefined &&\r\n                  selectedChatData._id === message.channelId\r\n                ) {\r\n                  addMessage(message);\r\n                }\r\n                addChannelInChannelList(message);\r\n            };\r\n\r\n            socket.current.on(\"receiveMessage\", handleReceiveMessage)\r\n            socket.current.on(\"receive-channel-message\", handleRecieveChannelMessage)\r\n            return () => {\r\n                socket.current.disconnect();\r\n            }\r\n        }\r\n    }, [userInfo]);\r\n\r\n    return (\r\n        <SocketContext.Provider value={socket.current}>\r\n            {children}\r\n        </SocketContext.Provider>\r\n    )\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;AAEA;AACA;AACA;AAAA;;;;;;AAEA,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAAE;AAE7B,MAAM,YAAY;IACrB,OAAO,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;AACtB;AAEO,MAAM,iBAAiB,CAAC,EAAC,QAAQ,EAAC;IACrC,MAAM,SAAS,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD;IACpB,MAAM,EAAC,QAAQ,EAAC,GAAG;IAEnB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,IAAI,UAAS;YACT,OAAO,OAAO,GAAG,CAAA,GAAA,wLAAA,CAAA,KAAE,AAAD,EAAE,yHAAA,CAAA,OAAI,EAAE;gBACtB,iBAAiB;gBACjB,OAAO;oBAAC,QAAQ,SAAS,EAAE;gBAAA;YAC/B;YACA,OAAO,OAAO,CAAC,EAAE,CAAC,WAAW;gBACzB,QAAQ,GAAG,CAAC;YAChB;YAEA,MAAM,uBAAuB,CAAC;gBAC1B,MAAM,EAAC,gBAAgB,EAAE,gBAAgB,EAAE,UAAU,EAAE,uBAAuB,EAAC,GAAG,YAAY,QAAQ;gBACtG,IAAI,qBAAqB,aAAa,CAAC,iBAAiB,GAAG,KAAK,QAAQ,MAAM,CAAC,GAAG,IAAI,iBAAiB,GAAG,KAAK,QAAQ,SAAS,CAAC,GAAG,GAAE;oBAClI,WAAW;gBACf;gBACA,wBAAwB;YAC5B;YAEA,MAAM,8BAA8B,CAAC;gBACjC,QAAQ,GAAG,CAAC;gBACZ,MAAM,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,UAAU,EAAE,uBAAuB,EAAE,GAAG,YAAY,QAAQ;gBAExG,IACE,qBAAqB,aACrB,iBAAiB,GAAG,KAAK,QAAQ,SAAS,EAC1C;oBACA,WAAW;gBACb;gBACA,wBAAwB;YAC5B;YAEA,OAAO,OAAO,CAAC,EAAE,CAAC,kBAAkB;YACpC,OAAO,OAAO,CAAC,EAAE,CAAC,2BAA2B;YAC7C,OAAO;gBACH,OAAO,OAAO,CAAC,UAAU;YAC7B;QACJ;IACJ,GAAG;QAAC;KAAS;IAEb,qBACI,8OAAC,cAAc,QAAQ;QAAC,OAAO,OAAO,OAAO;kBACxC;;;;;;AAGb","debugId":null}},
    {"offset": {"line": 213, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/ghost_socket/frontend/src/app/%28ghost%29/layout.jsx"],"sourcesContent":["import { SocketProvider } from \"@/context/SocketContext\";\r\n\r\nexport default function ConsoleLayout({ children }) {\r\n  return (\r\n    <SocketProvider>\r\n        <div>\r\n            Console Layout\r\n            {children}\r\n        </div>\r\n    </SocketProvider>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS,cAAc,EAAE,QAAQ,EAAE;IAChD,qBACE,8OAAC,gIAAA,CAAA,iBAAc;kBACX,cAAA,8OAAC;;gBAAI;gBAEA;;;;;;;;;;;;AAIb","debugId":null}}]
}