{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/ghost_socket/frontend/src/context/SocketContext.jsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const SocketProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call SocketProvider() from the server but SocketProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/context/SocketContext.jsx <module evaluation>\",\n    \"SocketProvider\",\n);\nexport const useSocket = registerClientReference(\n    function() { throw new Error(\"Attempted to call useSocket() from the server but useSocket is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/context/SocketContext.jsx <module evaluation>\",\n    \"useSocket\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,iBAAiB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,+DACA;AAEG,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,+DACA","debugId":null}},
    {"offset": {"line": 25, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/ghost_socket/frontend/src/context/SocketContext.jsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const SocketProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call SocketProvider() from the server but SocketProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/context/SocketContext.jsx\",\n    \"SocketProvider\",\n);\nexport const useSocket = registerClientReference(\n    function() { throw new Error(\"Attempted to call useSocket() from the server but useSocket is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/context/SocketContext.jsx\",\n    \"useSocket\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,iBAAiB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,2CACA;AAEG,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,2CACA","debugId":null}},
    {"offset": {"line": 43, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 53, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/ghost_socket/frontend/src/app/%28ghost%29/layout.jsx"],"sourcesContent":["import { SocketProvider } from \"@/context/SocketContext\";\r\n\r\nexport default function ConsoleLayout({ children }) {\r\n  return (\r\n    <SocketProvider>\r\n        <div>\r\n            Console Layout\r\n            {children}\r\n        </div>\r\n    </SocketProvider>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS,cAAc,EAAE,QAAQ,EAAE;IAChD,qBACE,8OAAC,gIAAA,CAAA,iBAAc;kBACX,cAAA,8OAAC;;gBAAI;gBAEA;;;;;;;;;;;;AAIb","debugId":null}}]
}